- name: Get central route
  kubernetes.core.k8s_info:
    kind: Route
    api_version: route.openshift.io/v1
    namespace: stackrox
    name: central
  register: r_stackrox_central_route
  retries: 10
  delay: 20
  until:
    - r_stackrox_central_route.resources[0].spec.host is defined

- name: Store central route as a fact
  set_fact:
    f_stackrox_central_addr: "{{ r_stackrox_central_route.resources[0].spec.host }}"

- name: Get Service Account objects
  kubernetes.core.k8s_info:
    kind: ServiceAccount
    api_version: /v1
    name: pipeline
    namespace: cicd
  register: r_argopass

- name: Get the secret that contains the token of sa pipeline
  set_fact:
    token_sa_pipeline_secret: "{{ r_argopass.resources[0].secrets | to_json | from_json | json_query(query) }}"
  vars:
    query: >-
      [?contains(name,'token')].name

- debug:
    msg: "{{ token_sa_pipeline_secret }}"

- name: Get token in the secret for the sa pipeline and decode
  kubernetes.core.k8s_info:
    kind: Secret
    api_version: /v1
    name: "{{ token_sa_pipeline_secret[0] | replace(\"'\",'') }}"
    namespace: cicd
  register: r_token_sa_secret

#- debug:
#    msg: "{{ r_token_sa_secret.resources[0].data.token | b64decode }}"

- name: define the token secret decoded
  set_fact:
    pipeline_token: "{{ r_token_sa_secret.resources[0].data.token | b64decode }}"

- name: Creating ACS Integration with the Openshift Internal Registry
  uri:
    url: "https://{{ f_stackrox_central_addr }}/v1/imageintegrations"
    body: "{{ lookup('template', 'templates/ocp_registry_acs.yml.j2') }}"
    method: POST
    user: admin
    password: "{{ stackrox_central_admin_password }}"
    body_format: json
    force_basic_auth: true
    validate_certs: no
    # temporarily accept 400s due to ROX-6699
    status_code: 200, 400
